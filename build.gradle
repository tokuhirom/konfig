// release by ./gradlew clean && ./gradlew uploadArchives -Prelease
group 'me.geso.tinyconfig'
version '0.0.1'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = 1.8
targetCompatibility = 1.8

description = 'Tiny configuration file reader'

// set build variables based on build type(release, continuous integration, development)
def isDevBuild
def isCiBuild
def isReleaseBuild
def sonatypeRepositoryUrl
if (hasProperty("release")) {
    isReleaseBuild = true
    sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
} else if (hasProperty("ci")) {
    isCiBuild = true
    version += "-SNAPSHOT"
    sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
} else {
    isDevBuild = true
    version += "-SNAPSHOT"
}

signing {
    required { isReleaseBuild }
    sign configurations.archives
}

uploadArchives {
    repositories {
        if (isDevBuild) {
            mavenLocal()
        } else {
            mavenDeployer {
                if (isReleaseBuild) {
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                }

                repository(url: sonatypeRepositoryUrl) {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }

                pom.project {
                    name 'tinyconfig'
                    packaging 'jar'
                    description 'Tiny configuration file loader for Java'
                    url 'http://github.com/tokuhirom/tinyconfig/'

                    scm {
                        url "scm:git@github.com:tokuhirom/tinyconfig.git"
                        connection "scm:git@github.com:tokuhirom/tinyconfig.git"
                        developerConnection "scm:git@github.com:tokuhirom/tinyconfig.git"
                    }
                    licenses {
                        license {
                            name 'MIT'
                            url 'https://opensource.org/licenses/MIT'
                        }
                    }
                    developers {
                        developer {
                            id 'tokuhirom'
                            name 'Tokuhiro Matsuno'
                            email 'tokuhirom@gmail.com'
                        }
                    }
                }
            }
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" << '-parameters'
}

dependencies {
    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.3'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.8.3'
    compile 'org.projectlombok:lombok:1.16.10'
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'com.google.guava:guava:19.0'
    compile 'org.yaml:snakeyaml:1.17'

    testCompile 'junit:junit:4.11'
    testCompile 'org.assertj:assertj-core:3.5.2'
    testCompile 'org.slf4j:slf4j-simple:1.7.21'
}
